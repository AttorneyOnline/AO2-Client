name: CI build

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.15.2
        platform:
          - gcc_64
          - android
          - msvc2017
          - mingw73_32
          - clang_64

        include:
          - platform: gcc_64
            os: ubuntu-latest
          - platform: android
            os: ubuntu-latest
          - platform: msvc2017_64
            os: windows-latest
          - platform: msvc2017
            os: windows-latest
          - platform: mingw73_64
            os: windows-latest
          - platform: mingw73_32
            os: windows-latest
          - platform: clang_64
            os: macos-latest

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - uses: actions/setup-python@v1
      - name: actions/cache qt
        uses: actions/cache@v1
        id: cache
        with:
          path: qt/${{matrix.version}}/${{matrix.platform}}
          key: qt-${{matrix.version}}-${{matrix.platform}}

      - uses: stonedDiscord/action-setup-qt@master
        id: qt
        with:
          version: ${{matrix.version}}
          platform: ${{matrix.platform}}
          cachedir: qt/${{matrix.version}}/${{matrix.platform}}

      - name: Install Catch2
        shell: bash
        run: |
          git clone https://github.com/catchorg/Catch2.git
          cd Catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF
          cmake --build build/ --target install

      - name: Install QtApng
        run: |
          git clone https://github.com/Skycoder42/QtApng.git
          cd QtApng
          qmake CONFIG+=install_ok QT_PLATFORM=${{matrix.platform}}
          ${{steps.qt.outputs.make}} qmake_all
          ${{steps.qt.outputs.make}}
          ${{steps.qt.outputs.make}} INSTALL_ROOT="${{steps.qt.outputs.installdir}}" install

      - name: Install Discord RPC
        run: |
          curl -L https://github.com/discordapp/discord-rpc/releases/download/v3.4.0/discord-rpc-win.zip -o discord_rpc.zip
          unzip discord_rpc.zip
          cp ./discord-rpc/${{matrix.platform}}-dynamic/lib/discord-rpc.lib ./lib

      - name: Install BASS
        run: |
          curl http://www.un4seen.com/files/bass24.zip -o bass.zip
          unzip bass.zip
          cp ./c/x64/bass.lib ./lib

          curl http://www.un4seen.com/files/bassmidi24.zip -o bassmidi.zip
          unzip bassmidi.zip
          cp ./c/x64/bassmidi.lib ./lib

          curl http://www.un4seen.com/files/bassopus24.zip -o bassopus.zip
          unzip bassopus.zip
          cp ./c/x64/bassopus.lib ./lib

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target Attorney_Online

      - name: Deploy
        working-directory: ${{github.workspace}}/build/Release
        shell: bash
        run: |
          windeployqt .
          cp ../../msvc2017_64/plugins/imageformats/qapng.dll ./imageformats/
          cp ../../discord-rpc/win64-dynamic/bin/discord-rpc.dll .
          cp ../../x64/bass.dll .
          cp ../../x64/bassmidi.dll .
          cp ../../x64/bassopus.dll .

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Attorney_Online-x64
          path: ${{github.workspace}}/build/Release/